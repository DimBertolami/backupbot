export interface BacktestMetrics {
  totalReturn: number;
  maxDrawdown: number;
  sharpeRatio: number;
  winRate: number;
  averageWin: number;
  averageLoss: number;
  totalTrades: number;
  profitableTrades: number;
  losingTrades: number;
  longestWinningStreak: number;
  longestLosingStreak: number;
  averageWinningStreak: number;
  averageLosingStreak: number;
  averageTradeDuration: string;
  maxTradeDuration: string;
  minTradeDuration: string;
  averageProfitPerTrade: number;
  averageLossPerTrade: number;
  totalProfit: number;
  totalLoss: number;
  netProfit: number;
  profitFactor: number;
  expectancy: number;
  riskRewardRatio: number;
  recoveryFactor: number;
  riskOfRuin: number;
  averageDailyReturn: number;
  volatility: number;
  correlationWithMarket: number;
  beta: number;
  alpha: number;
  informationRatio: number;
  trackingError: number;
  downsideDeviation: number;
  sortinoRatio: number;
  calmarRatio: number;
  omegaRatio: number;
  tailRatio: number;
  valueAtRisk: number;
  conditionalValueAtRisk: number;
  skewness: number;
  kurtosis: number;
  maxDailyLoss: number;
  maxDailyGain: number;
  averageDailyLoss: number;
  averageDailyGain: number;
  dailyWinRate: number;
  dailyLossRate: number;
  consecutiveWinningDays: number;
  consecutiveLosingDays: number;
  averageWinningDays: number;
  averageLosingDays: number;
  dailyProfitFactor: number;
  dailyExpectancy: number;
  dailyRiskRewardRatio: number;
  dailyRecoveryFactor: number;
  dailyRiskOfRuin: number;
  dailyAverageReturn: number;
  dailyVolatility: number;
  dailyCorrelationWithMarket: number;
  dailyBeta: number;
  dailyAlpha: number;
  dailyInformationRatio: number;
  dailyTrackingError: number;
  dailyDownsideDeviation: number;
  dailySortinoRatio: number;
  dailyCalmarRatio: number;
  dailyOmegaRatio: number;
  dailyTailRatio: number;
  dailyValueAtRisk: number;
  dailyConditionalValueAtRisk: number;
  dailySkewness: number;
  dailyKurtosis: number;
  dailyMaxLoss: number;
  dailyMaxGain: number;
  dailyAverageLoss: number;
  dailyAverageGain: number;
}

export interface BacktestTrade {
  timestamp: string;
  type: 'buy' | 'sell';
  price: number;
  amount: number;
  fee: number;
  pnl: number;
  duration: string;
  strategy: string;
}

export interface BacktestResult {
  strategy: string;
  timeframe: string;
  startDate: string;
  endDate: string;
  initialCapital: number;
  metrics: BacktestMetrics;
  trades: BacktestTrade[];
}
